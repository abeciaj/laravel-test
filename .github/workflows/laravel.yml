name: Build and deploy

on:
  push:
    branches: [task/*]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        password: ${{ secrets.SSH_PASS }}
        port: ${{ secrets.PORT }}
        script: whoami



# name: Laravel

# on:
#   push:
#     branches: [ task/* ]
#   pull_request:
#     branches: [ task/* ]

# jobs:
#   laravel-tests:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
#       with:
#         php-version: '8.0'
#     - uses: actions/checkout@v2
#     - name: Copy .env
#       run: php -r "file_exists('.env') || copy('.env.example', '.env');"
#     - name: Install Dependencies
#       run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
#     - name: Generate key
#       run: php artisan key:generate
#     - name: Directory Permissions
#       run: chmod -R 777 storage bootstrap/cache
#     - name: Create Database
#       run: |
#         mkdir -p database
#         touch database/database.sqlite
#     - name: Execute tests (Unit and Feature tests) via PHPUnit
#       env:
#         DB_CONNECTION: sqlite
#         DB_DATABASE: database/database.sqlite
#       run: vendor/bin/phpunit

#   build:

#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#       - name: Setup Node.js
#         uses: actions/setup-node@v2-beta
#         with:
#           node-version: '12'
#           check-latest: true
#       - name: Install NPM dependencies
#         run: npm install
#       - name: Compile assets for production
#         run: npm run production

#   deploy:
#     runs-on: ubuntu-latest
  
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#       - name: executing remote ssh commands using ssh key 
#         uses: appleboy/ssh-action@master 
#         with: 
#           host: ${{ secrets.SSH_HOST }} 
#           username: ${{ secrets.SSH_USERNAME }} 
#           password: ${{ secrets.SSH_PASSWORD }}
#           timeout: ${{ secrets.SSH_TIMEOUT }}
#       - name: test1
#         run: su user
#       - name: test2
#         run: cd /var/www/html/
